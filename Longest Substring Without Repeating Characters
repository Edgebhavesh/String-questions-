import java.util.*;
class Solution {
    public int lengthOfLongestSubstring(String s) {
//         HashMap<Character,Integer> map=new HashMap<>();
//         int max_len=0;
//         int start=0;
//         for(int i=0;i<s.length();i++)
//         {
//             if(map.containsKey(s.charAt(i)))
//             {
//                 start=Math.max(start,map.get(s.charAt(i))+1);
//             }
//             map.put(s.charAt(i),i);
//             max_len=Math.max(max_len,i-start+1);
//         }
        
//         return max_len;
        
        
         int i=-1;
         int j=-1;
         int ans=0;
        
        HashMap<Character,Integer> map=new HashMap<>();
        
       
        
        while(true)
        {
             boolean f1=false;
             boolean f2=false;
            
            while(i<s.length()-1)
            {
                f1=true;
                i++;
                char ch=s.charAt(i);
                map.put(ch,map.getOrDefault(ch,0)+1);
                
                if(map.get(ch)==2)
                {
                    break;
                }
                else
                {
                    int len=i-j;
                    ans=Math.max(ans,len);   
                }
            }
            
            while(j<i)
            {
                j++;
                f2=true;
                char ch=s.charAt(j);
                map.put(ch,map.get(ch)-1);
                
                if(map.get(ch)==1)
                {
                    break;
                }
            }
            
            if(f1==false && f2==false)
            {
                break;
            }
        }
        
        return ans;
    }
}
